import pandas as pd
import os

def split_csv_by_columns(file_path):
    """Splits a CSV file into two parts, each containing half of the columns, and saves to the desktop."""
    
    desktop_path = os.path.expanduser("~/Desktop")  # Get desktop path
    output_dir = os.path.join(desktop_path, "split_csv_files")  # Create a folder for output
    os.makedirs(output_dir, exist_ok=True)  # Ensure directory exists
    
    # Load dataset
    df = pd.read_csv(file_path)
    
    # Get total columns and split into two halves
    total_cols = df.shape[1]
    mid_index = total_cols // 2  # Find midpoint
    
    # Ensure common identifier columns (modify if needed)
    identifier_cols = ["district", "region", "county", "distname", "cntyname"]  # Adjust based on your dataset
    identifier_cols = [col for col in identifier_cols if col in df.columns]  # Keep only existing columns
    
    # Split columns into two parts, ensuring identifiers remain in both
    first_half_cols = identifier_cols + [col for col in df.columns if col not in identifier_cols][:mid_index]
    second_half_cols = identifier_cols + [col for col in df.columns if col not in identifier_cols][mid_index:]
    
    # Save first half
    first_half = df[first_half_cols]
    output_file1 = os.path.join(output_dir, "dataset_part1.csv")
    first_half.to_csv(output_file1, index=False)
    print(f"✅ Saved: {output_file1} ({first_half.shape[1]} columns)")
    
    # Save second half
    second_half = df[second_half_cols]
    output_file2 = os.path.join(output_dir, "dataset_part2.csv")
    second_half.to_csv(output_file2, index=False)
    print(f"✅ Saved: {output_file2} ({second_half.shape[1]} columns)")

# Example Usage
split_csv_by_columns("~/Desktop/yearly_data_2019.csv")  # Replace with actual filename
