---
title: "Demographic_Maps"
format: html
---

# Set-Up

## Loading in the Geometry 

```{r}
library(sf)
geo_tx <- read_sf("Texas_SchoolDistricts_2024.geojson")

geo_tx$DISTRICT_N <- as.integer(geo_tx$DISTRICT_N)

geo_htx <- st_transform(read_sf("Houston_SchoolDistricts_2019.geojson"))

geo_htx$DISTRICT_N <- as.integer(geo_htx$DISTRICT_N)
```

## Loading in DIST data

```{r}
yrs <- 2020:2023

df_list <- list()

for (i in 1:length(yrs)) {
  file.list <- list.files(path = paste0("Data/Data", yrs[[i]], "/District/clean_data/"), 
                          pattern = "*.xlsx")
  print(file.list)
  yr_files <- list()
  for (j in 1:length(file.list)) {
    df <- readxl::read_excel(paste0("Data/Data", yrs[[i]], "/District/clean_data/", file.list[[j]]))
    yr_files[[j]] <- df
  }
  names(yr_files) <- gsub(paste0(yrs[[i]], "_clean\\.xlsx|_", yrs[[i]], "_clean\\.xlsx"), "", file.list)
  df_list[[i]] <- yr_files
}

names(df_list) <- yrs
```

## Combining the Datasets

```{r}
library(tidyr)
library(dplyr)
distgrad <- list()
distperf <- list()
distprof <- list()
dist_type <- list()
diststaar1 <- list()
dref <- list()

for (i in 1:length(df_list)) {
  distgrad[[i]] <- df_list[[i]]$distgrad %>% pivot_longer(-DISTRICT_id, names_to = "Measure", values_to = "Value") %>% mutate(year = yrs[[i]])
  distprof[[i]] <- df_list[[i]]$distprof  %>% pivot_longer(-DISTRICT_id, names_to = "Measure", values_to = "Value") %>% mutate(year = yrs[[i]])
  distperf[[i]] <- df_list[[i]]$distperf  %>% pivot_longer(-DISTRICT_id, names_to = "Measure", values_to = "Value") %>% mutate(year = yrs[[i]])
  diststaar1[[i]] <- df_list[[i]]$diststaar1  %>% pivot_longer(-DISTRICT_id, names_to = "Measure", values_to = "Value") %>% mutate(year = yrs[[i]])
  dist_type[[i]] <- df_list[[i]]$district_type %>% mutate(year = yrs[[i]])
  dref[[i]] <- df_list[[i]]$dref %>% mutate(year = yrs[[i]])
}

distgrad_combined <- do.call(rbind, distgrad)
distprof_combined <- do.call(rbind, distprof)
distperf_combined <- do.call(rbind, distperf)
diststaar1_combined <- do.call(rbind, diststaar1)
dist_type_combined <- do.call(rbind, dist_type)
```

## Creating a new variable that is not dependent on the year

```{r}
distgrad_combined$Measure_NoYr <- gsub("District \\d{4} ", "", distgrad_combined$Measure)
distperf_combined$Measure_NoYr <- gsub("District \\d{4} ", "", distperf_combined$Measure)
distprof_combined$Measure_NoYr <- gsub("District \\d{4} ", "", distprof_combined$Measure)
diststaar1_combined$Measure_NoYr <- gsub("District \\d{4} ", "", diststaar1_combined$Measure)

distgrad_combined$DISTRICT_id <- as.integer(gsub("'", "", distgrad_combined$DISTRICT_id))
distperf_combined$DISTRICT_id <- as.integer(gsub("'", "", distperf_combined$DISTRICT_id))
distprof_combined$DISTRICT_id <- as.integer(gsub("'", "", distprof_combined$DISTRICT_id))
diststaar1_combined$DISTRICT_id <- as.integer(gsub("'", "", diststaar1_combined$DISTRICT_id))
```

# Visualizations

## Binning Helper Function

```{r}
binning <- function(x) {
  quantiles <- round(quantile(x, probs = seq(0, 1, 0.2)), 0)

  breaks <- quantiles

  if (min(quantiles) > 0) { # if the quantiles don't include both 0 and 100
    breaks <- c(0, quantiles)  # add them to the vector
  }
  if (max(quantiles) < 100) {
    breaks <- c(breaks, 100)
  }

labels <- paste0(quantiles[-length(quantiles)], "-", quantiles[-1], "%") # base labels

if (min(quantiles) > 0) { # append a minimum % label if 0 is not included
  labels <- c(paste0("<", quantiles[1], "%"), labels)
}
if (max(quantiles) < 100) { # append a maximum % label if 100 is not included
  labels <- c(labels, paste0(">", quantiles[length(quantiles)], "%"))
}

# check that they're the correct lengths
if (length(labels) != length(breaks) - 1) {
  stop("Labels and breaks are not the same length")
}
  
  bins <- cut(x, 
              breaks = breaks, 
              labels = labels)
  
  return(bins)
}
```

```{r}
library(dplyr)
library(ggplot2)
library(sf)

make_demographic_map <- function(variable, level, year) {
  filtered <- distprof_combined %>% filter(Measure_NoYr == variable, year == year) %>% select(-Measure)
  
  if (level == "Houston") {
  with_geo <- filtered %>% inner_join(geo_htx, join_by("DISTRICT_id" == "DISTRICT_N"))
  
  data_wide <- with_geo %>% pivot_wider(names_from = "Measure_NoYr", values_from = "Value") %>% rename(c("var" = variable))
  
  data_wide$bins <- binning(data_wide$var)
  
  map <- ggplot() + 
  geom_sf(data = geo_tx, fill = "gray90", color = "grey20", lwd = 0.2) +

  geom_sf(data = data_wide, aes(geometry = geometry, fill = bins)) +
    
  labs(title = paste0(ifelse(variable == "Student Membership: Econ Disadv Percent", "Percent Economically Disadvantaged", gsub("Student Membership: ", "", variable)), " Enrollment By School District in Houston, ", year), fill = "Percent of Students") +
    
  coord_sf(xlim = c(st_bbox(geo_htx)$xmin, st_bbox(geo_htx)$xmax), 
           ylim = c(st_bbox(geo_htx)$ymin, st_bbox(geo_htx)$ymax)) +
    
  ggthemes::theme_few()  +
  
  scale_fill_brewer(palette = "Blues") + 
    
  theme(plot.title = element_text(size=10)) +
    
  theme(axis.text.x=element_blank(),
        axis.ticks.x=element_blank(),
        axis.text.y=element_blank(),
        axis.ticks.y=element_blank())
  
  variable_clean <- variable %>%
  gsub(" ", "_", .) %>%
  gsub("/", "_", .) %>%
  gsub(":", "", .)
  
  cat("Saving", variable, "map of", level, "to", getwd(), "\n")
  
  ggsave(plot = map, filename = paste0(variable_clean, "_", year, "_", level, ".png"))
  }
  
    if (level == "Texas") {
  with_geo <- filtered %>% inner_join(geo_tx, join_by("DISTRICT_id" == "DISTRICT_N"))
  data_wide <- with_geo %>% pivot_wider(names_from = "Measure_NoYr", values_from = "Value") %>% rename(c("var" = variable))
  
  data_wide$bins <- binning(data_wide$var)
  
  map <- ggplot() + 
  geom_sf(data = geo_tx, fill = "gray90", color = "grey20", lwd = 0.2) +

  geom_sf(data = data_wide, aes(geometry = geometry, fill = bins)) +
    
  labs(title = paste0(ifelse(variable == "Student Membership: Econ Disadv Percent", "Economically Disadvantaged Percent", gsub("Student Membership: ", "", variable)), " Enrollment By School District in Texas, ", year), fill = "Percent of Students") +
  
  ggthemes::theme_few() +
    
  scale_fill_brewer(palette = "Blues") + 
    
  theme(plot.title = element_text(size=10)) +
    
  theme(axis.text.x=element_blank(),
        axis.ticks.x=element_blank(),
        axis.text.y=element_blank(),
        axis.ticks.y=element_blank())
  
  variable_clean <- variable %>%
  gsub(" ", "_", .) %>%
  gsub("/", "_", .) %>%
  gsub(":", "", .)
  
  cat("Saving", variable, "map of", level, "to", getwd(), "\n")
  
  ggsave(plot = map, filename = paste0(variable_clean, "_", year, "_", level, ".png"))
  }
}

# make_demographic_map("Student Membership: Hispanic Percent", "Houston", 2023)
```
