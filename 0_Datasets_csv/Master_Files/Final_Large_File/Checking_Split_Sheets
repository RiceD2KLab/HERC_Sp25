import os
import pandas as pd
import glob
import re

def find_misplaced_columns(desktop_path, start_year=2017, end_year=2024, check_specific_year=None):
    """
    Checks yearly_data_YYYY.csv files to find:
    1. Columns that do NOT contain the expected year in their names.
    2. If a specific year is provided, finds columns that contain multiple years in their names.

    Parameters:
    desktop_path (str): Path to the desktop where the yearly files are stored.
    start_year (int): Start of the year range to check.
    end_year (int): End of the year range to check.
    check_specific_year (int, optional): If provided, checks which columns contain multiple years.

    Returns:
    None (prints results)
    """
    years_to_check = [str(year) for year in range(2017, 2025)]

    for year in range(start_year, end_year + 1):
        file_path = os.path.join(desktop_path, f"yearly_data_{year}.csv")

        if not os.path.exists(file_path):
            print(f"❌ File not found: {file_path}")
            continue

        # Load dataset with low_memory=False to prevent dtype warnings
        df = pd.read_csv(file_path, dtype=str, low_memory=False)
        
        # Standardize column names (lowercase & strip spaces)
        df.columns = df.columns.str.lower().str.strip()

        # Find columns that do NOT contain the expected year
        misplaced_columns = [col for col in df.columns if str(year) not in col]

        # Print misplaced columns
        if misplaced_columns:
            print(f"\n⚠️ Columns in yearly_data_{year}.csv that do NOT contain '{year}':")
            print(misplaced_columns)
        else:
            print(f"✅ All columns in yearly_data_{year}.csv correctly contain '{year}'.")

        # If a specific year is provided, find columns with multiple years
        if check_specific_year and check_specific_year == year:
            multiple_year_columns = [col for col in df.columns if sum(y in col for y in years_to_check) > 1]
            
            if multiple_year_columns:
                print(f"\n🔍 Columns in yearly_data_{year}.csv that contain multiple years:")
                for col in multiple_year_columns:
                    found_years = [y for y in years_to_check if y in col]
                    print(f"  - {col} (Years Found: {', '.join(found_years)})")
            else:
                print(f"✅ No columns in yearly_data_{year}.csv contain multiple years.")

# Example Usage
desktop_path = os.path.expanduser("~/Desktop")
find_misplaced_columns(desktop_path, check_specific_year=2023)  # Change 2019 to the year you want to check
